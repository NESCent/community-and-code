project_id	event_id	full_name	narrative_description
1	7	Architastic	"The Architastic team focused on building the core infrastructure of Phylotastic. The team implemented a Model-View-Controller design, which coordinates communication between clients (such as PhyloGeotastic), the treestore, the taxonomic name resolution service (TNRS), the pruner, and DateLife. The central controller also includes an interface for user interaction that helps disambiguate results from TNRS."
2	7	DateLife	"DateLife is an open-source web service that allows users to obtain divergence dates for a set of taxa. As part of the Phylotastic suite, it can assign branch lengths to the pruned trees obtained by submitting a taxon list to the central controller and pruner. DateLife was initiated at the first hackathon, and its development continued during hackathon 2."
3	7	Phylostylotastic	"Phylostylotastic extends the NexML standard for tree annotation with a new set of metadata that is interpreted as styles, a la CSS and HTML. The TSS (tree style sheets) standard is a specification that incorporates most decorations and markups commonly used in published phylogenies and is available on the Phylostylotastic wiki page."
4	7	Phylogeotastic	"Phylogeotastic is a front-end client that enables easy geospatial queries to Phylotastic. It allows the user to specify a geographic region and retrieve the tree of life for the organisms that inhabit that part of the globe. The client links Phylotastic to several clearinghouses for species occurrence data, including GBIF (through the Lampyr app) and iNaturalist."
5	7	Taxonomic Name Resolution	"Participants at the first hackathon built Taxosaurus, a taxonomic thesaurus service that cleans an input list of species name and attempts to match each input name with a currently valid species. We continued development at the second hackathon, emphasizing name cleaning and spellchecking functions. Name Cleaner (mr-naims) is a tool for generating a report (CSV) on the validity of species names in a document. It is written in python and designed to be agnostic about the types of files on which it can operate. This is aided in large part by the [Global Names Discovery Service] API, which accepts PDFs, Office documents, images, or plain text. DendroPy is used to read trees in Newick and NeXML formats. One participant (Gaurav Vaidya) also created an autocompletion widget for species names, which aid users in selecting the correct spelling for species names on the fly."
6	7	Tree Annotation	"A complete Phylotastic system must manage metadata for phylogenies, including metadata on expert source trees (e.g., citations, methods), and a description of phylotastic manipulations. The Tree Annotation team focused on representing and storing metadata on source phylogenies. They identified a set of 10 source trees and created free-text annotations for citations, sources and methods used to build those trees. Then, they encoded the data and metadata as RDF using CDAO and other ontologies, including a new MIAPA ontology for tree annotation, loaded the encoded information into a triplestore, and demonstrated logical querying based on data and metadata attributes."
7	8	Integration of Trees and Traits	"The goal was to set up workflows in both R and Arbor to analyze trait data on trees from OpenTree. Several test cases were developed: Anolis lizard ecomorphs, Heliconia morphological traits, Pocket Gophers and Their Parasitic Chewing Lice, Stochastic mapping and diversification analyses with Solanaceae, mapping of sexual systems from Tree of Sex database"
8	8	Library wrappers for OT APIs	"Goal was to develop client libraries for the Open Tree of Life RESTful API, in at least the languages R, Python and Ruby. Starting from the RESTful API itself, which was considered Level 0, the goal was to develop client functionality such that language-native primitives can be passed and received (Level 1) before attempting object wrappers (Level 2)."
9	8	Phylogeny viz style-sheets	"Goal of PhyloStyloTastic is to develop simple, portable style for phylogenetic (and other) trees. It uses NexSS (formerly TSS), a stylesheet language which is not (quite) CSS, but uses the same syntax and concepts to style tree figures for printed output or interactive display."
10	8	Down-sampling taxa	"Typically the user who wants a tree of mammals does not want a tree with 4500 species, but rather a tree with a representative set.  For instance, many users requesting a tree of mammals would be satisfied with the 94 species with known genomes, or one species for each of 26 orders, or ~150 families. We originally called this down-sampling but that metaphor is misleading if one takes it too literally.  We can distinguish several different modes of sampling to get a tree."
11	8	Branch lengths	Project to develop functionality that can query the Open Tree of Life for its source trees and allow the user to select a source tree that overlaps with their favorite taxa and contains branch lengths; exchange some taxa on the source tree to maximize overlap with the user's input taxa; get calibration points from other timetrees in the Open Tree of Life and from the Paleobiology Database; use Congruify to return a timetree with the maximum number of taxa from the user's input.
12	8	Annotation database	"Subgroup to design / prototype an annotations database for attaching data, such as divergence times, ancestral trait data, fossil calibrations, taxon names, images, provenance data, to nodes in the synthetic tree."
13	6	Phylotastic Shiny	"The shiny project aims to develop a small set of well documented, user-oriented demonstration projects to show what phylotastic can do. "
14	6	Phylotastic Architecture	"Subgroup focused in outlining the overall architecture of PhyloTastic using a model/view/controller design that communicates with TNRS, topology pruning/grafting, Tree Store, and Branch Lengths. Two proofs-of-concept were developed, one using JavaScript/node.js and one using Perl/CGI"
15	6	TNRS	Two-fold effort: provide a simple 'name cleaner' to aide Tree Annotation group & put together a spellchecker JavaScript widget
16	6	Branch lengths	"Project to make up missing edge lengths and communicate that to users  (bladej, birth death, uniform, not giving any back, giving many different ones back)"
17	6	Tree Store	"Objectives are to create a store of trees, based on RDF - triple store, that supports depositing and retrieving of trees, include retrieval of metadata and including returning pruned trees"
18	4	Integrating Ontologies	"Resulting from three pitches (from Julie Thompson, John Wieczorek and Rutger Vos), this project identified as objectives to determine best practices for the building, maintenance and integration of ontologies in a community with rapidly emerging and changing requirements."
19	4	Taxonomic Reasoning	"Project to identify a list of grand challenges within the biological domain that could benefit from applying reasoning techniques in data integration and data discovery, to develop a small set of use cases within those grand challenges and to develop a working ontology that integrates many types of data sets and uses reasoning to answer domain-relevant queries."
20	4	Phyloreferencing	"Project to develop the semantics of topological querying on phylogenetic tree stores, based on prior art including PhyloCode, PhyLoTA's query functionality and certain PAUP commands. As syntax, CQL was targeted so that queries using phyloreferencing could be included in PhyloWS requests."
21	4	Publishing Taxonomies	Project to answer the question in what 'format' publishers of linked-data RDF should make their biological classification available?
22	4	TripleStore	"Practical project group aiming to understand AllegroGraph WebView, including the semantics it provides for various RDFs and OWL constructs and how to use it for geospatial reasoning; to implement use cases involving GBIF occurrence data and biodiversity inventories of the world's protected areas; and to provide a triple store implementation that implements use cases being generated by any of the other VoCamp groups."
23	4	SADI biodiversity	Mini-project to demonstrate the application of the SADI framework for semantic web services in the biodiversity informatics domain.
24	2	Diversification	Targets/Accomplishments were (1) Implementation of Binary-state speciation / extinction (BiSSE) model in R (under construction ?); (2) Still implementing Ree (2005) key innovation test; (3) Major update to package laser; added set of functions to test for diversification rate shifts using combined phylogenetic and taxonomic data; (4) Vignettes written for several diversification rate analyses
25	2	Divergence Time Estimation	Targets were (1) recode penalized likelihood method in ape; (2) implement new models of rate change other than Poisson approximation; (3) implement code in C for cross checking (Swofford).  Accomplishments were (1) new tree parameterization (Swofford); (2) wrote HowTo estimate divergence times in R. 
26	2	Documentation	Targets/Accomplishments: (1) HelpWiki contents; (2) Task view draft; (3) Vignettes
27	2	Trait Evolution	"Compare various implementations of the same methods (ape, geiger, OUCH, Mesquite): (1) Improve functionality of character fitting in R; (2) Identify gaps in current implementation"
28	2	Class Design	"This group aimed to develop designs for phylogeny objects and align with existing objects (e.g., from ape package).  Some of the complications are described on http://informatics.nescent.org/wiki/R_Hackathon_1/Data_Standards"
29	2	Mesquite-R communication	"Aims were (1) to enable R packages, and their functions to be called from within Mesquite, with an R package appearing as a choice for the proper operation in the Mesquite UI; and (2) Make Mesquite classes, methods, and data objects usable from within R in a transparent fashion"
30	2	Input-Output	"Targets/Accomplishments: (1) Input of trees and data from Nexus files (Status: accomplished, part of phylobase); (2) Output of trees and data from R to other formats (Status: ______); (3) Calling other programs (MrBayes, etc.) from R (Status: _____)"
31	1	Sequence family evolution	Subgroup to develop use cases concerning the characterization of sequence families in a set of related organisms.
32	1	Reconciling trees	"Subgroup concerned with attempts to reconcile the structure of one or more gene family trees with the structure of the species tree corresponding to the genomes that one has used (and this species tree may have been obtained by some other means of phylogenetic analysis). Identifying the differences between different types of trees, gene family and species for example, may shed light on how the genes may have changed as speciation has occured in the given clade. "
33	1	Phylogenetic footprinting	This Phyloinformatic Hackathon group was concerned with how one might discover and characterize conserved sequence features shared in related genomes or genomic sequences. Footprinting and Shadowing are similar but typically differ in the number of sequences analyzed and the relatedness of those sequences. 
34	1	Phylogeny inference on non-molecular characters	"Many phyloinformaticists are exclusively concerned with phylogenetic analysis based on analysis of sequence but an equally important, and vibrant, means of classification uses features or characters from developmental and morphological studies. One could argue further that these two seemingly distinct approaches will eventually unify, as we begin to understand the details of the relationship between gene and physical manifestation. "
35	1	Estimate divergence times	"This Phyloinformatics Hackathon page discusses work that the participants contributed to enable calculation of divergence. The term has at least two significant meanings in phyloinformatics, and these meanings are related to each other. First, it refers to the degree of relatedness of a pair of sequences or some generalized expression of relatedness derived from many pairs. Second, it refers to branching or divergence on a species trees. It is a fundamental principle in phyloinformatics that one can use the former to estimate the latter. "
36	1	NEXUS compliance issues	"To support NEXUS with software means providing users the tools to read, write, search, edit and visualize the contents of a NEXUS file. Because the NEXUS format is complex, most software does not implement much of the standard, and may violate it in various ways. Therefore, the focus here is on reading and writing conformant files."
37	3	Taxonomic Intelligence Subgroup	Syntax and protocols for resolving taxonomies.
38	3	Java API Library to NeXML Subgroup	"Lightweight, High level API for NeXML"
39	3	Phylr Subgroup	PhyloWS high level and adaptors
40	3	Semantic API for CDAO Subgroup	extracting NeXML semantics in triple stores
41	3	Visualization Subgroup	Web GUI for tree viewing and editing.
42	5	GMatchbox	"Worked on establishing a common database backend and JSON-based API for comparative genomics data, using several visualization tools (including JBrowse and GBrowse_syn) as targets. Will enable sharing of comparative data in multiple tools from multiple sources."
43	5	GBrowse_syn2	"GBrowse_syn is built on and takes advantage of the GBrowse genome browser code and config files.  However, it did not work well with GBrowse2, due to significant architectural changes.  This group refactored GBrowse2 to naturally support GBrowse_syn.  This work will also enable several other GBrowse1-only applications (SynView, PrimerDesigner.pm, ...) to be ported to GBrowse2 as well.  Two participants also became core GBrowse_syn developers.  Code is in 3 github repos: https://github.com/GMOD/GBrowse/tree/syn_2x, https://github.com/GMOD/GBrowse/tree/syn_2x_modules, https://github.com/GMOD/GBrowse/tree/rubber"
44	5	JBrowse_syn	This group set out to extend JBrowse to be a comparative genomics browser.  The group removed the existing single genome assumption from the code and successfully displayed several genomes in parallel.  Several participants also became familiar with JBrowse code and architecture.
45	5	PhyloBox	[http://phylobox.appspot.com/ PhyloBox] is a flexible and fast web based tree visualization program.  At the hackathon the PhyloBox team extended PhyloBox in numerous ways to make it a widget that can interact with other widgets. PhyloBox documentation was also created.
46	5	PhyloBox JBrowse Integration	"The group is the perfect example of the interaction that can happen at a hackathon.  They worked with the JBrowse_syn, PhyloBox and GMatchbox groups to enable integration of these three technologies.  This group was very helpful at getting teams to work together."
47	5	Natural Diversity and Phenotypes in Chado	"This group focused on two outcomes, both relating to Chado.  The first was a prototype Rails application that provided a web interface to the new Natural Diversity module in Chado.  This was built on top of the emerging Chado on Rails project.  The second was a better understanding, slight refactoring, and updated documentation for Chado's phenotype module."
48	5	Galaxy + HyPhy	"Galaxy is both a workflow system and a means of persisting computational pipelines and results.  This group worked on improving Galaxy's ability to integrate interactive tools, using [http://hyphy.org HyPhy] as the prototype application.  The Galaxy and HyPhy code bases were modified to support this."
49	5	BioPerl	"This subgroup worked on improving tree handling in BioPerl.  Specifically, they addressed the handling of very large trees or large numbers of small trees.  BioPerl now supports storing such trees in a lightweight database instead of in memory.  All work is being done on topic branches within the bioperl-live GitHub repository: https://github.com/bioperl/bioperl-live/tree/topic/tree_dbsqlite_memoryfix, https://github.com/bioperl/bioperl-live/commits/topic/tree_api_refresh"
50	9	Workflow vignette community website	"Many population genetics workflows in R require combining functions from a multitude of packages. However, documentation on which packages work well together for which scientific question is scarce. This group created an online commmunity resource of vignettes for common analysis goal-driven population genetics workflows in R."
51	9	Streamlining VCF data flow	"Improved performance for large VCF datasets, and data interoperability between R packages analysing population structure in variant data. Also created R package for multi-gene data."
52	9	Integrating simulation with popgen analysis	"Create an R package that guides users through the workflow of implementing simulations in population genetics questions. Create accompanying documentation that outlines the questions that simulations can address and discusses issues relevant to choice of initial parameters, simulator type, execution, and summary metrics."
53	9	Identifying and visualizing outliers in multi-variate summary statistics space	"To create a package for summarizing multivariate data that is a common product in population genetics analyses, and to construct a Shiny-based visualization medium for multivariate datasets."
54	9	R package for calculating Ne in different ways	"Created an R package for estimating the effective population size (N_e) using a variety of algorithms."
